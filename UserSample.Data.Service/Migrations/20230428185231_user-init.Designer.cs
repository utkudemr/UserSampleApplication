// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserSample.Data.Service.EF;

#nullable disable

namespace UserSample.Data.Service.Migrations
{
    [DbContext(typeof(UserSampleContext))]
    [Migration("20230428185231_user-init")]
    partial class userinit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserSample.Data.Service.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifiedDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TCKNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1681c8df-61c0-4899-8535-b3ed5b40ca35"),
                            BirthDate = new DateTime(2023, 4, 28, 21, 52, 31, 819, DateTimeKind.Local).AddTicks(914),
                            CreatedDate = new DateTime(2023, 4, 28, 21, 52, 31, 819, DateTimeKind.Local).AddTicks(914),
                            IsActive = true,
                            Name = "test",
                            Surname = "test",
                            TCKNumber = 1111111111L
                        },
                        new
                        {
                            Id = new Guid("3c315d0d-5186-4df4-90cf-b7527f70f308"),
                            BirthDate = new DateTime(2023, 4, 28, 21, 52, 31, 819, DateTimeKind.Local).AddTicks(917),
                            CreatedDate = new DateTime(2023, 4, 28, 21, 52, 31, 819, DateTimeKind.Local).AddTicks(917),
                            IsActive = true,
                            Name = "test1",
                            Surname = "test1",
                            TCKNumber = 1111111112L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
